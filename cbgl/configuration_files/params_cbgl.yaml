# reference frames
fixed_frame_id: "map"             # The global reference frame
base_frame_id: "base_footprint"   # The localised frame
odom_frame_id: "odom"             # If `tf_broadcast` is true then the
                                  # fixed_frame_id <-- odom_frame_id transform is broadcast
tf_broadcast: true

# input topics
map_topic: "/map"
scan_topic: "/scan"
output_pose_topic: "/initialpose"

# input png map absolute path (needed by the library that performs raycasting)
map_png_file: "/home/user_cbgl/catkin_ws/src/cbgl/docker/map.png"

# call me
global_localisation_service_name: "/global_localization"

# Pose densities. The product dl x da determines how many pose hypotheses are
# dispersed per square meter of map area within the map. The higher the density
# the more probable it is that localisation will be successful, at the expense
# of execution time.
# Locational density in poses per sqm
dl: 15

# Angular density in poses per cycle
da: 32

# The k pose estimates with the least CAER will be scan--to--map-scan matched
# to the measurement range scan
top_k_caers: 10

# Publish H,H_1,H_2
publish_pose_sets: true

# Selection of the raycasting method: {vanilla|ray_marching|cddt|bresenham}
map_scan_method: "ray_marching"

# z axis points {upwards|downwards}
laser_z_orientation: "upwards"

# Undersample number of ranges (CBGL is robust to decreasing number of ranges;
# + reduction in number of ranges means less execution time)
do_undersample_scan: true

# if undersample_rate = 4 then 1 out of 4 rays are considered
undersample_rate: 1

# global pose retrieval method (do_icp AND do_fmt should equal FALSE).
# fsm works only with panoramic sensors; icp does not discriminate
do_icp: true
do_fsm: false
